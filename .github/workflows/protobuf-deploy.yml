name: Protobuf Compile
on:
  push:
    branches:
      - '*'
  create:
    tags:
      - v*
      
jobs:
  compile-go:
    uses:  tommzn/github-ci/.github/workflows/go.protobuf.complie.yml@v1.0.44
    secrets:
      cr-pat: ${{ secrets.PUSH_TOKEN }}
      slack-channel: ${{ secrets.SLACK_CHANNEL }}
      slack-bottoken: ${{ secrets.SLACK_BOT_TOKEN }}
    with:
      upload-artifact: true

  deploy-go:
    name: Update Golang Events
    #if: github.event_name == 'create' && contains(github.ref, '/tags/v')
    runs-on: ubuntu-latest
    needs: compile-go
    continue-on-error: true
    env:
      GOLANG_EVENTS_REPO: ${{ secrets.TARGET_REPO }}
    steps:
      - name: Set version tag
        id: release
        run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\/}
      - name: Checkout Golang events lib
        uses: actions/checkout@v2
        with:
          repository: ${{ env.GOLANG_EVENTS_REPO }}
          ref: main
      - name: Download Golang events
        uses: actions/download-artifact@v2
        with:
          name: golang-events
      - name: Check for Changes
        run: |
          git add -N .
          ! git diff --quiet
      - name: Add Changes
        if: ${{ success() }}
        env:
          USERNAME: ${{ secrets.PUSH_USER }}
          EMAIL: ${{ secrets.PUSH_EMAIL }}
        run: |
          git config --global user.name $USERNAME
          git config --global user.email $EMAIL
          git add -A
          git commit -am "Updated by $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/commit/$GITHUB_SHA"
      - name: Update Repository
        env:
          REPO_KEY: ${{ secrets.PUSH_TOKEN }}
          USERNAME: ${{ secrets.PUSH_USER }}
          EMAIL: ${{ secrets.PUSH_EMAIL }}
        run: |
          git tag ${{ steps.release.outputs.tag }}
          git config -l | grep 'http\..*\.extraheader' | cut -d= -f1 | xargs -L1 git config --unset-all
          git push --force --tags "https://$USERNAME:$REPO_KEY@github.com/$GOLANG_EVENTS_REPO" main:main
      - name: Create Release
        if: ${{ success() }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PUSH_TOKEN }}
        with:
          tag_name: ${{ steps.release.outputs.tag }}
          release_name: ${{ steps.release.outputs.tag }}
          body: |
            Release ${{ steps.release.outputs.tag }} (auto generated)
          draft: false
          prerelease: false
      - name: Send Slack Message (Failed)
        if: failure()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: ${{ secrets.slack-channel }}
          payload: |
            {
              "text": "Protobuf Deployment: ${{ job.status }}",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": ":red_circle:  Protobuf Deployment: ${{ job.status }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<${{ github.server_url }}/${{ github.repository }}|${{ github.repository }}>"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ github.ref_type }}: ${{ github.ref_name }}"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View at GitHub Actions> | <${{ github.event.head_commit.url }}|Commit: ${{ github.event.head_commit.id }}>"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack-bottoken }}
      - name: Send Slack Message (Success)
        if: success()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: ${{ secrets.slack-channel }}
          payload: |
            {
              "text": "Protobuf Deployment: ${{ job.status }}",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": ":tada:  Protobuf Deployment: ${{ job.status }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<${{ github.server_url }}/${{ github.repository }}|${{ github.repository }}>"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ github.ref_type }}: ${{ github.ref_name }}"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View at GitHub Actions> | <${{ github.event.head_commit.url }}|Commit: ${{ github.event.head_commit.id }}>"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack-bottoken }}
